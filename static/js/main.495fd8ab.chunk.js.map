{"version":3,"sources":["components/Button.jsx","components/AddForm.jsx","components/Flexbox.jsx","components/Avatar.jsx","icons/verified.svg","components/Post.jsx","components/PostForm.jsx","components/Settings.jsx","App.js","index.js"],"names":["StyledButton","styled","button","props","marginTop","theme","colors","accent","Button","StyledAddImg","div","darkBg","fontColors","dark","AddForm","onAddImg","setPostImg","useState","url","setUrl","action","onSubmit","e","preventDefault","onAdd","htmlFor","onChange","target","value","type","name","placeholder","StyledFlexbox","direction","align","justify","margin","padding","borderBottom","Flexbox","StyledAvatar","img","Avatar","src","StyledAuthor","bgColor","StyledNickname","StyledTime","StyledText","StyledPostButtons","StyledComment","StyledRetweet","StyledLike","StyledVerified","StyledImg","Post","Math","floor","random","comments","setComments","retweets","setRetweets","toFixed","likes","setLikes","onCounter","elem","user","avatar","username","VerifiedIcon","alt","nickname","dangerouslySetInnerHTML","__html","post","postData","image","length","onClick","className","StyledInput","textarea","color","StyledAdd","PostForm","tweet","text","setText","rows","setRows","ref","createRef","useEffect","current","scrollHeight","clientHeight","innerHTML","onInput","split","join","StyledSettings","StyledWindow","StyledForm","form","Settings","onSettings","setUser","newUser","setNewUser","id","onClose","onSetUser","minLength","maxLength","StyledApp","StyledContainer","StyledHeader","StyledEmpty","App","settings","setSettings","addImg","setAddImg","index","setIndex","posts","setPosts","postImg","data","msg","newPost","postId","map","Global","createGlobalStyle","ReactDOM","render","lightBg","light","document","getElementById"],"mappings":"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","file":"static/js/main.495fd8ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n    cursor: pointer;\r\n    margin-top: ${props => props.marginTop || '0.7rem'};\r\n    background-color: ${props => props.theme.colors.accent};\r\n    padding: 0.3rem 1.5rem 0.5rem 1.5rem;\r\n    border: none;\r\n    border-radius: 1.5rem;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    font-size: 1.2rem;\r\n    transition: .3s all;\r\n    &:hover {\r\n        background-color: #1677b9;\r\n    }\r\n`\r\n\r\nconst Button = (props) => {\r\n    return <StyledButton {...props}/>\r\n};\r\n\r\nexport default Button;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst StyledAddImg = styled.div`\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background-color: #00000080;\r\n    z-index: 10;\r\n    form {\r\n        width: 100%;\r\n        max-width: 500px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding: 1rem;\r\n        background-color: ${props => props.theme.colors.darkBg};\r\n        label {\r\n            \r\n        }\r\n        input {\r\n            padding: 0.2rem 0.5rem;\r\n            color: ${props => props.theme.fontColors.dark};\r\n            margin-top: 1rem;\r\n            font-size: 1.2rem;\r\n            width: 100%;\r\n            border: none;\r\n            border-bottom: 1px solid grey;\r\n            background-color: ${props => props.theme.colors.darkBg};\r\n            &:focus {\r\n                outline: none;\r\n            }\r\n        }\r\n        \r\n    }\r\n`\r\n\r\nconst AddForm = ({onAddImg, setPostImg}) => {\r\n\r\n    const [url, setUrl] = useState('');\r\n\r\n    function onAdd(e) {\r\n        e.preventDefault();\r\n        setPostImg(url);\r\n        onAddImg();\r\n    }\r\n\r\n    return (\r\n        <StyledAddImg>\r\n            <form action=\"/\" onSubmit={(e) => onAdd(e)}>\r\n                <label htmlFor=\"url\">Add Image URL</label>\r\n                <input \r\n                    onChange={(e) => setUrl(e.target.value)} \r\n                    type=\"text\" \r\n                    name=\"url\" \r\n                    placeholder=\"Paste URL here\"/>\r\n                <Button marginTop=\"1.5rem\">Submit</Button>\r\n            </form>\r\n        </StyledAddImg>\r\n    )\r\n};\r\n\r\nexport default AddForm;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFlexbox = styled.div`\r\n    display: flex;\r\n    flex-direction: ${props => props.direction || 'row'};\r\n    align-items: ${props => props.align || 'stretch'};\r\n    justify-content: ${props => props.justify || 'stretch'};\r\n    margin: ${props => props.margin || 0};\r\n    padding: ${props => props.padding || 0};\r\n    border-bottom: ${props => props.borderBottom || 0};\r\n`\r\n\r\nconst Flexbox = (props) => {\r\n    return <StyledFlexbox {...props}/>\r\n};\r\n\r\nexport default Flexbox;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledAvatar = styled.img`\r\n    display: block;\r\n    width: 53px;\r\n    height: 53px;\r\n    border-radius: 50%;\r\n`\r\n\r\nconst Avatar = ({url}) => {\r\n    return <StyledAvatar src={url}/>\r\n};\r\n\r\nexport default Avatar;","export default __webpack_public_path__ + \"static/media/verified.012ac5bf.svg\";","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport Avatar from './Avatar';\r\nimport Flexbox from './Flexbox';\r\nimport VerifiedIcon from '../icons/verified.svg'\r\n\r\nconst StyledAuthor = styled.div`\r\n    color: ${props => props.bgColor || props.theme.fontColors.dark};\r\n    margin-left: 0.7rem;\r\n    font-size: 1rem;\r\n    font-weight: 700;\r\n`\r\nconst StyledNickname = styled.div`\r\n    margin-left: 0.4rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    color: rgb(136, 153, 166);\r\n`\r\n\r\nconst StyledTime = styled.div`\r\n    margin-left: 0.5rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    color: rgb(136, 153, 166);\r\n`\r\n\r\nconst StyledText = styled.div`\r\n    color: ${props => props.theme.fontColors.dark};\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    margin-left: 0.7rem;\r\n    line-height: 1.3rem;\r\n`\r\n\r\nconst StyledPostButtons = styled(Flexbox)`\r\n    line-height: 1.2rem;\r\n    color: rgb(136, 153, 166);\r\n    width: 300px;\r\n    font-size: 0.9rem;\r\n    user-select: none;\r\n    i {\r\n        font-size: 1.1rem;\r\n        margin-right: 0.7rem;\r\n    }\r\n    @media (max-width: 400px) {\r\n        width: 250px;\r\n    }\r\n    @media (max-width: 350px) {\r\n        width: 220px;\r\n    }\r\n`\r\n\r\nconst StyledComment = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    transition: 0.5s all;\r\n    &:hover {\r\n        color: ${props => props.theme.colors.accent};\r\n    }\r\n`\r\nconst StyledRetweet = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    transition: 0.5s all;\r\n    &:hover {\r\n        color: #18e47e;\r\n    }\r\n`\r\nconst StyledLike = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    transition: 0.5s all;\r\n    &:hover {\r\n        color: #d1255e;\r\n    }\r\n`\r\n\r\nconst StyledVerified = styled.div`\r\n    img {\r\n        margin-top: 0.2rem;\r\n        margin-left: 0.25rem;\r\n        width: 1rem;\r\n        height: 1rem;\r\n    }\r\n`\r\n\r\nconst StyledImg = styled.div`\r\n    width: 97%;\r\n    max-height: 350px;\r\n    padding-left: 0.8rem;\r\n    margin-top: 1rem;\r\n    img {\r\n        border-radius: 1rem;\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n        object-position: top;\r\n    }\r\n`\r\n\r\nconst Post = (props) => {\r\n\r\n    const [comments, setComments] = useState(Math.floor(Math.random() * 2800 + 200));\r\n    const [retweets, setRetweets] = useState(Math.floor(Math.random() * 19500 + 500));\r\n    const [likes, setLikes] = useState((Math.random() * 200 + 20).toFixed(1));\r\n\r\n    function createMarkup() {\r\n        return {__html: props.post.postData};\r\n      }\r\n\r\n    function onCounter(elem) {\r\n        if (elem === 'comments') {\r\n            setComments(Math.floor(Math.random() * 2800 + 200));\r\n        } else if (elem === 'retweets') {\r\n            setRetweets(Math.floor(Math.random() * 19500 + 500));\r\n        } else {\r\n            setLikes((Math.random() * 200 + 20).toFixed(1));\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n            <Flexbox padding=\"1rem 1.5rem 1rem 1rem\" borderBottom=\"1px solid #38444d\">\r\n                <Avatar url={props.user.avatar}/>\r\n                <Flexbox direction=\"column\">\r\n                    <Flexbox>\r\n                        <StyledAuthor>{props.user.username}</StyledAuthor>\r\n                        <StyledVerified>\r\n                            <img src={VerifiedIcon} alt=\"verified\" />\r\n                        </StyledVerified>\r\n                        <StyledNickname>{props.user.nickname}</StyledNickname>\r\n                        <StyledTime>1h</StyledTime>\r\n                    </Flexbox>\r\n                    <StyledText dangerouslySetInnerHTML={createMarkup()}/>\r\n                    {\r\n                        props.post.image.length ? (\r\n                            <StyledImg>\r\n                                <img src={props.post.image} alt=\"\" />\r\n                            </StyledImg>\r\n                        ) : null\r\n                    }\r\n                    <StyledPostButtons justify=\"space-between\" margin=\"1rem 0 0 0.7rem\">\r\n                        <StyledComment onClick = {() => onCounter('comments')}>\r\n                            <i className=\"far fa-comment\"></i>\r\n                            {comments > 999 ? (comments / 1000).toFixed(1) + 'K' : comments}\r\n                        </StyledComment>\r\n                        <StyledRetweet onClick = {() => onCounter('retweets')}>\r\n                            <i className=\"fas fa-retweet\"></i>\r\n                            {retweets > 999 ? (retweets / 1000).toFixed(1) + 'K' : retweets}\r\n                        </StyledRetweet>\r\n                        <StyledLike onClick = {() => onCounter('likes')}>\r\n                            <i className=\"far fa-heart\"></i>\r\n                            {likes + 'K'}\r\n                        </StyledLike>\r\n                    </StyledPostButtons>\r\n                </Flexbox>\r\n            </Flexbox>\r\n\r\n    )\r\n};\r\n\r\nexport default Post;","import React, { createRef, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Avatar from './Avatar';\r\nimport Button from './Button';\r\nimport Flexbox from './Flexbox';\r\n\r\nconst StyledInput = styled.textarea`\r\n    margin-top: 1rem;\r\n    width: 100%;\r\n    border: none;\r\n    background-color: ${props => props.bgColor || props.theme.colors.darkBg};\r\n    color: ${props => props.color || props.theme.fontColors.dark};\r\n    padding: 0 1rem;\r\n    font-size: 1.2rem;\r\n    resize: none;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`\r\nconst StyledAdd = styled.div`\r\n    margin-top: 0.5rem;\r\n    cursor: pointer;\r\n    color: ${props => props.color || props.theme.colors.accent};\r\n    font-weight: 700;\r\n    transition: 0.3s all;\r\n    margin-left: 4.6rem;\r\n    &:hover {\r\n        opacity: 0.7;\r\n    }\r\n`\r\n\r\nconst PostForm = ({tweet, onAddImg, avatar}) => {\r\n\r\n    const [text, setText] = useState('');\r\n    const [rows, setRows] = useState(1);\r\n    const ref = createRef();\r\n\r\n    function onTweet(msg) {\r\n        tweet(msg.split('\\n').join('<br>'));\r\n        setText('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ref.current.scrollHeight > ref.current.clientHeight && rows < 10) {\r\n            setRows(rows + 1);\r\n        }\r\n        if (ref.current.innerHTML.length < 1) {\r\n            setRows(1);\r\n        }\r\n      }, [ref, rows]);\r\n\r\n    return (\r\n        <Flexbox direction=\"column\" padding=\"1rem\" borderBottom=\"1px solid #38444d\">\r\n            <Flexbox align=\"flex-start\">\r\n                <Avatar url={avatar}/>\r\n                <StyledInput \r\n                    ref={ref} \r\n                    onInput={(e) => setText(e.target.value)} \r\n                    value={text} \r\n                    rows={rows}\r\n                    placeholder=\"What happen?\"/>\r\n            </Flexbox>\r\n            <Flexbox direction=\"row\" justify=\"space-between\" align=\"flex-start\">\r\n                <StyledAdd onClick={onAddImg}>Add image</StyledAdd>\r\n                <Button onClick={() => onTweet(text)}>Tweet</Button>\r\n            </Flexbox>\r\n        </Flexbox>\r\n    );\r\n};\r\n\r\nexport default PostForm;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst StyledSettings = styled.div`\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background-color: #00000070;\r\n    z-index: 10;\r\n`\r\nconst StyledWindow = styled.div`\r\n    position: relative;\r\n    background-color: ${props => props.theme.colors.darkBg};\r\n    width: 100%;\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n    padding: 1rem 1.5rem 2rem 1.5rem;\r\n`\r\n\r\nconst StyledForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    label {\r\n        padding-top: 2rem;\r\n    }\r\n    input {\r\n        width: 100%;\r\n        font-size: 1.2rem;\r\n        padding: 0.5rem;\r\n        color: ${props => props.theme.fontColors.dark};\r\n        border: none;\r\n        background-color: ${props => props.theme.colors.darkBg};\r\n        border-bottom: 1px solid gray;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    }\r\n`\r\n\r\nconst Settings = ({onSettings, user, setUser}) => {\r\n\r\n    const [newUser, setNewUser] = useState([\r\n        {\r\n            username: user.username,\r\n            nickname: user.nickname,\r\n            avatar: user.avatar\r\n        }\r\n    ]);\r\n\r\n    function onClose(e) {\r\n        if (e.target.id === 'overlay') {\r\n            onSettings();\r\n        }\r\n    }\r\n\r\n    function onSetUser(e) {\r\n        e.preventDefault();\r\n        setUser(newUser);\r\n        onSettings();\r\n    }\r\n    \r\n    return (\r\n        <StyledSettings id=\"overlay\" onClick={(e) => onClose(e)}>\r\n            <StyledWindow id=\"settings\">\r\n                <h2>Settings</h2>\r\n                <StyledForm action=\"/\" onSubmit={(e) => onSetUser(e)}>\r\n                    <label htmlFor=\"Username\">Username</label>\r\n                    <input \r\n                        onChange={(e) => setNewUser([{\r\n                            username: e.target.value,\r\n                            nickname: newUser[0].nickname,\r\n                            avatar: newUser[0].avatar\r\n                        }])} \r\n                        type=\"text\" \r\n                        placeholder=\"Elon Musk\" \r\n                        name=\"Username\"\r\n                        value={newUser[0].username}\r\n                        minLength=\"3\"\r\n                        maxLength=\"20\" />\r\n                    <label htmlFor=\"Nickname\">Nickname</label>\r\n                    <input \r\n                        onChange={(e) => setNewUser([{\r\n                            username: newUser[0].username,\r\n                            nickname: e.target.value,\r\n                            avatar: newUser[0].avatar\r\n                        }])} \r\n                        type=\"text\" \r\n                        placeholder=\"@elonmusk\" \r\n                        name=\"Nickname\"\r\n                        value={newUser[0].nickname}\r\n                        minLength=\"3\"\r\n                        maxLength=\"20\" />\r\n                    <label htmlFor=\"Image\">Image URL</label>\r\n                    <input \r\n                        onChange={(e) => setNewUser([{\r\n                            username: newUser[0].username,\r\n                            nickname: newUser[0].nickname,\r\n                            avatar: e.target.value\r\n                        }])} \r\n                        type=\"text\"\r\n                        value={newUser[0].avatar} \r\n                        placeholder=\"https://.../img.jpg\" \r\n                        name=\"Image\" />\r\n                    <Button marginTop=\"1.5rem\">Submit</Button>\r\n                </StyledForm>\r\n            </StyledWindow>\r\n        </StyledSettings>\r\n    )\r\n};\r\n\r\nexport default Settings;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport AddForm from './components/AddForm';\nimport Flexbox from './components/Flexbox';\nimport Post from './components/Post';\nimport PostForm from './components/PostForm';\nimport Settings from './components/Settings';\n\nconst StyledApp = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  background-color: ${props => props.bgColor || props.theme.colors.darkBg};\n  color: ${props => props.bgColor || props.theme.fontColors.dark};\n`\nconst StyledContainer = styled.div`\n  max-width: 666px;\n  min-height: 100vh;\n  margin: 0 auto;\n  border-left: 1px solid #38444d;\n  border-right: 1px solid #38444d;\n  border-bottom: 1px solid #38444d;\n`\nconst StyledHeader = styled.div`\n  font-size: 1.5rem;\n  font-weight: 600;\n  background-color: ${props => props.bgColor || props.theme.colors.darkBg};\n  color: ${props => props.bgColor || props.theme.fontColors.dark};\n`\nconst StyledSettings = styled.div`\n  cursor: pointer;\n  padding: 0.5rem;\n  font-size: 1.2rem;\n  transition: 0.3s all;\n  &:hover {\n    color: ${props => props.theme.colors.accent};\n    background-color: #1357af24;\n    border-radius: 50%;\n  }\n`\nconst StyledEmpty = styled.div`\n  width: 100%;\n  height: 50vh;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  p {\n    font-weight: 400;\n    font-size: 1.5rem;\n    opacity: 0.5;\n  }\n`\n\nfunction App() {\n  const [settings, setSettings] = useState(false);\n  const [addImg, setAddImg] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [posts, setPosts] = useState([]);\n  const [postImg, setPostImg] = useState('');\n  const [user, setUser] = useState([\n  {\n    username: 'Elon Musk',\n    nickname: '@elonmusk',\n    avatar: 'https://pbs.twimg.com/profile_images/1423663740344406029/l_-QOIHY_400x400.jpg'\n  }]);\n\n  function tweet(msg) {\n    const newPost = [{postId: index, postData: msg, image: postImg}];\n    setIndex(index + 1);\n    setPosts([...newPost, ...posts]);\n    setPostImg('');\n  }\n\n  return (\n    <StyledApp>\n      {settings ? (<Settings user={user[0]} setUser={(data) => setUser(data)} onSettings={() => setSettings(false)}/>) : null}\n      {addImg ? (<AddForm onAddImg={() => setAddImg(false)} setPostImg={(url) => setPostImg(url)}/>) : null}\n      <StyledContainer>\n        <Flexbox justify=\"space-between\" align=\"center\" padding=\"1rem\" borderBottom=\"1px solid #38444d\">\n          <StyledHeader>Twitter Posts</StyledHeader>\n          <StyledSettings onClick={() => setSettings(!settings)}><i className=\"fas fa-cog\"></i></StyledSettings>\n        </Flexbox>\n        <PostForm tweet={tweet} onAddImg={() => setAddImg(true)} avatar={user[0].avatar}/>\n        {\n          posts.length ? (\n            posts.map(post => {\n              return <Post key={post.postId} post={post} user={user[0]} />\n            })\n          ) : <StyledEmpty><p>It's empty here</p></StyledEmpty>\n        }\n      </StyledContainer>\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport App from './App';\n\nconst Global = createGlobalStyle`\n* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n  'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n  sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  ::-webkit-scrollbar {\n    width: 10px;\n  }\n  ::-webkit-scrollbar-track {\n    background: #0e151c;\n  }\n  ::-webkit-scrollbar-thumb {\n    background: #1d9bf0;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background: #1d9bf0;\n  }\n}\n`\nconst theme = {\n  colors: {\n    darkBg: '#15202b',\n    lightBg: '#fff',\n    accent: '#1d9bf0'\n  },\n  fontColors: {\n    dark: '#fff',\n    light: '#000'\n  }\n}\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Global/>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}